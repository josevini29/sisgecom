-- mysql script generated by mysql workbench
-- sun dec  3 22:45:09 2017
-- model: new model    version: 1.0
-- mysql workbench forward engineering



-- -----------------------------------------------------
-- schema nutrimix
-- -----------------------------------------------------
drop schema if exists nutrimix ;

-- -----------------------------------------------------
-- schema nutrimix
-- -----------------------------------------------------
create schema if not exists nutrimix  ;

-- -----------------------------------------------------
-- table nutrimix.estado
-- -----------------------------------------------------
create table if not exists nutrimix.estado (
  cd_sigla char(2) not null,
  nm_estado varchar(50) not null,
  primary key (cd_sigla));


-- -----------------------------------------------------
-- table nutrimix.cidade
-- -----------------------------------------------------
create table if not exists nutrimix.cidade (
  cd_cidade serial not null,
  nm_cidade varchar(80) not null,
  cd_estado char(2) not null,
  primary key (cd_cidade),
  constraint fk_cidade_estado
    foreign key (cd_estado)
    references nutrimix.estado (cd_sigla)
    on delete no action
    on update no action);

create index fk_cidade_estado_idx on nutrimix.cidade (cd_estado asc);


-- -----------------------------------------------------
-- table nutrimix.pessoa
-- -----------------------------------------------------
create table if not exists nutrimix.pessoa (
  cd_pessoa serial not null,
  tp_pessoa char(1) not null,
  nr_cpfcnpj varchar(14) not null,
  nm_pessoa varchar(200) not null,
  ds_apelido varchar(200) null,
  nr_rg varchar(9) null,
  tp_sexo char(1) null,
  ds_email varchar(80) null,
  tp_estadcivil char(2) null,
  dt_nasc date null,
  nr_inscriestad varchar(9) null,
  primary key (cd_pessoa));


-- -----------------------------------------------------
-- table nutrimix.endereco
-- -----------------------------------------------------
create table if not exists nutrimix.endereco (
  cd_pessoa int not null,
  cd_endereco serial not null,
  cd_cidade int not null,
  tp_endereco int not null,
  ds_logradouro varchar(100) not null,
  ds_complemento varchar(100) null,
  nr_imovel varchar(15) not null,
  nm_bairro varchar(60) not null,
  cd_cep char(8) null,
  primary key (cd_endereco, cd_pessoa),
  constraint fk_endereco_cidade1
    foreign key (cd_cidade)
    references nutrimix.cidade (cd_cidade)
    on delete no action
    on update no action,
  constraint fk_endereco_pessoa1
    foreign key (cd_pessoa)
    references nutrimix.pessoa (cd_pessoa)
    on delete no action
    on update no action);

create index fk_endereco_cidade1_idx on nutrimix.endereco (cd_cidade asc);

create index fk_endereco_pessoa1_idx on nutrimix.endereco (cd_pessoa asc);


-- -----------------------------------------------------
-- table nutrimix.telefone
-- -----------------------------------------------------
create table if not exists nutrimix.telefone (
  cd_telefone serial not null,
  cd_pessoa int not null,
  tp_telefone char(1) not null,
  tp_uso char(1) not null,
  nr_ddd varchar(3) not null,
  nr_telefone varchar(9) not null,
  primary key (cd_telefone, cd_pessoa),
  constraint fk_telefone_pessoa1
    foreign key (cd_pessoa)
    references nutrimix.pessoa (cd_pessoa)
    on delete no action
    on update no action);

create index fk_telefone_pessoa1_idx on nutrimix.telefone (cd_pessoa asc);


-- -----------------------------------------------------
-- table nutrimix.perfil
-- -----------------------------------------------------
create table if not exists nutrimix.perfil (
  cd_perfil serial not null,
  ds_perfil varchar(30) not null,
  primary key (cd_perfil));


-- -----------------------------------------------------
-- table nutrimix.funcionario
-- -----------------------------------------------------
create table if not exists nutrimix.funcionario (
  cd_funcionario serial not null,
  cd_pessoa int not null,
  dt_admissao date not null,
  dt_demissao date null,
  nr_pis char(11) not null,
  ds_cargo varchar(50) not null,
  cd_usercad int not null,
  dt_cadastro timestamp not null,
  primary key (cd_funcionario),
  constraint fk_funcionario_pessoa1
    foreign key (cd_pessoa)
    references nutrimix.pessoa (cd_pessoa)
    on delete no action
    on update no action);

create unique index cd_funcionario_unique on nutrimix.funcionario (cd_funcionario asc);

create index fk_funcionario_pessoa1_idx on nutrimix.funcionario (cd_pessoa asc);


-- -----------------------------------------------------
-- table nutrimix.usuario
-- -----------------------------------------------------
create table if not exists nutrimix.usuario (
  cd_usuario serial not null,
  cd_perfil int null,
  ds_login varchar(15) not null,
  ds_senha char(6) not null,
  cd_usercad int not null,
  dt_cadastro timestamp not null,
  in_ativo char(1) not null,
  cd_funcionario int null,
  primary key (cd_usuario),
  constraint fk_usuario_perfil1
    foreign key (cd_perfil)
    references nutrimix.perfil (cd_perfil)
    on delete no action
    on update no action,
  constraint fk_usuario_funcionario1
    foreign key (cd_funcionario)
    references nutrimix.funcionario (cd_funcionario)
    on delete no action
    on update no action);

create unique index ds_login_unique on nutrimix.usuario (ds_login asc);

create index fk_usuario_perfil1_idx on nutrimix.usuario (cd_perfil asc);

create index fk_usuario_funcionario1_idx on nutrimix.usuario (cd_funcionario asc);


-- -----------------------------------------------------
-- table nutrimix.fornecedor
-- -----------------------------------------------------
create table if not exists nutrimix.fornecedor (
  cd_fornecedor serial not null,
  cd_pessoa int not null,
  ds_obs varchar(500) null,
  cd_usercad int not null,
  dt_cadastro timestamp not null,
  in_ativo char(1) not null,
  primary key (cd_fornecedor),
  constraint fk_fornecedor_pessoa1
    foreign key (cd_pessoa)
    references nutrimix.pessoa (cd_pessoa)
    on delete no action
    on update no action);

create index fk_fornecedor_pessoa1_idx on nutrimix.fornecedor (cd_pessoa asc);


-- -----------------------------------------------------
-- table nutrimix.cliente
-- -----------------------------------------------------
create table if not exists nutrimix.cliente (
  cd_cliente serial not null,
  cd_pessoa int not null,
  cd_usercad int not null,
  dt_cadastro timestamp not null,
  in_ativo char(1) not null,
  primary key (cd_cliente),
  constraint fk_cliente_pessoa1
    foreign key (cd_pessoa)
    references nutrimix.pessoa (cd_pessoa)
    on delete no action
    on update no action);

create index fk_cliente_pessoa1_idx on nutrimix.cliente (cd_pessoa asc);


-- -----------------------------------------------------
-- table nutrimix.grupo_produto
-- -----------------------------------------------------
create table if not exists nutrimix.grupo_produto (
  cd_grupo serial not null,
  nm_grupo varchar(45) not null,
  primary key (cd_grupo));


-- -----------------------------------------------------
-- table nutrimix.unidade_padrao
-- -----------------------------------------------------
create table if not exists nutrimix.unidade_padrao (
  cd_undpadrao varchar(10) not null,
  ds_undpadrao varchar(45) not null,
  primary key (cd_undpadrao));


-- -----------------------------------------------------
-- table nutrimix.produto
-- -----------------------------------------------------
create table if not exists nutrimix.produto (
  cd_produto serial not null,
  cd_grupo int not null,
  cd_undpadrao varchar(10) not null,
  cd_undpadcompra varchar(10) not null,
  qt_conversao real not null,
  nm_produto varchar(250) not null,
  qt_estqminimo real not null,
  qt_estqatual real not null,
  in_estoque char(1) not null,
  in_consumo char(1) not null,
  in_venda char(1) not null,
  vl_customedio varchar(45) not null,
  cd_usercad int not null,
  dt_cadastro timestamp not null,
  in_ativo char(1) not null,
  primary key (cd_produto),
  constraint fk_produto_grupo_produto1
    foreign key (cd_grupo)
    references nutrimix.grupo_produto (cd_grupo)
    on delete no action
    on update no action,
  constraint fk_produto_unidade_padrao1
    foreign key (cd_undpadrao)
    references nutrimix.unidade_padrao (cd_undpadrao)
    on delete no action
    on update no action,
  constraint fk_produto_unidade_padrao2
    foreign key (cd_undpadcompra)
    references nutrimix.unidade_padrao (cd_undpadrao)
    on delete no action
    on update no action);

create index fk_produto_grupo_produto1_idx on nutrimix.produto (cd_grupo asc);

create index fk_produto_unidade_padrao1_idx on nutrimix.produto (cd_undpadrao asc);

create index fk_produto_unidade_padrao2_idx on nutrimix.produto (cd_undpadcompra asc);


-- -----------------------------------------------------
-- table nutrimix.ajuste_estoque
-- -----------------------------------------------------
create table if not exists nutrimix.ajuste_estoque (
  cd_ajuste serial not null,
  dt_ajuste timestamp not null,
  tp_ajuste int not null,
  ds_obs varchar(150) null,
  cd_usercad int not null,
  dt_cadastro timestamp not null,
  primary key (cd_ajuste));


-- -----------------------------------------------------
-- table nutrimix.atendimento
-- -----------------------------------------------------
create table if not exists nutrimix.atendimento (
  cd_atend int not null,
  dt_atend date not null,
  nr_mesa int not null,
  st_atend char(1) not null,
  cd_usercad int not null,
  dt_cadastro timestamp not null,
  primary key (cd_atend, dt_atend));


-- -----------------------------------------------------
-- table nutrimix.pedido
-- -----------------------------------------------------
create table if not exists nutrimix.pedido (
  cd_pedido serial not null,
  st_pedido char(1) not null,
  cd_fornecedor int not null,
  cd_usercad int not null,
  dt_cadastro timestamp not null,
  primary key (cd_pedido),
  constraint fk_pedido_fornecedor1
    foreign key (cd_fornecedor)
    references nutrimix.fornecedor (cd_fornecedor)
    on delete no action
    on update no action);

create index fk_pedido_fornecedor1_idx on nutrimix.pedido (cd_fornecedor asc);


-- -----------------------------------------------------
-- table nutrimix.venda_compra
-- -----------------------------------------------------
create table if not exists nutrimix.venda_compra (
  cd_movto serial not null,
  tp_movto char(1) not null,
  cd_pessoa int null,
  nr_nota varchar(20) null,
  cd_serie varchar(10) null,
  dt_emissao date null,
  vl_desconto real null,
  vl_adicional real null,
  vl_frete real null,
  cd_usercad int not null,
  dt_cadastro timestamp not null,
  cd_atend int null,
  dt_atend timestamp null,
  vl_total real not null,
  cd_pedido int null,
  in_cancelado char(1) not null,
  primary key (cd_movto),
  constraint fk_venda_compra_pessoa1
    foreign key (cd_pessoa)
    references nutrimix.pessoa (cd_pessoa)
    on delete no action
    on update no action,
  constraint fk_venda_compra_atendimento1
    foreign key (cd_atend , dt_atend)
    references nutrimix.atendimento (cd_atend , dt_atend)
    on delete no action
    on update no action,
  constraint fk_venda_compra_pedido1
    foreign key (cd_pedido)
    references nutrimix.pedido (cd_pedido)
    on delete no action
    on update no action);

create index fk_venda_compra_pessoa1_idx on nutrimix.venda_compra (cd_pessoa asc);

create index fk_venda_compra_atendimento1_idx on nutrimix.venda_compra (cd_atend asc, dt_atend asc);

create index fk_venda_compra_pedido1_idx on nutrimix.venda_compra (cd_pedido asc);


-- -----------------------------------------------------
-- table nutrimix.movto_estoque
-- -----------------------------------------------------
create table if not exists nutrimix.movto_estoque (
  cd_estqmovto serial not null,
  tp_movto char(1) not null,
  cd_produto int not null,
  dt_movto timestamp not null,
  qt_movto real not null,
  vl_item real null,
  qt_estoque real not null,
  vl_customedio real not null,
  cd_ajuste int null,
  cd_movcompvend int null,
  cd_usercancel int null,
  dt_cancelado timestamp null,
  in_cancelado char(1) not null,
  primary key (cd_estqmovto),
  constraint fk_mov_estoque_produto1
    foreign key (cd_produto)
    references nutrimix.produto (cd_produto)
    on delete no action
    on update no action,
  constraint fk_mov_estoque_ajuste_estoque1
    foreign key (cd_ajuste)
    references nutrimix.ajuste_estoque (cd_ajuste)
    on delete no action
    on update no action,
  constraint fk_mov_estoque_venda_compra1
    foreign key (cd_movcompvend)
    references nutrimix.venda_compra (cd_movto)
    on delete no action
    on update no action);

create index fk_mov_estoque_produto1_idx on nutrimix.movto_estoque (cd_produto asc);

create index fk_mov_estoque_ajuste_estoque1_idx on nutrimix.movto_estoque (cd_ajuste asc);

create index fk_mov_estoque_venda_compra1_idx on nutrimix.movto_estoque (cd_movcompvend asc);


-- -----------------------------------------------------
-- table nutrimix.preco
-- -----------------------------------------------------
create table if not exists nutrimix.preco (
  cd_produto int not null,
  dt_inicio timestamp not null,
  vl_venda varchar(45) not null,
  primary key (cd_produto, dt_inicio),
  constraint fk_preco_produto1
    foreign key (cd_produto)
    references nutrimix.produto (cd_produto)
    on delete no action
    on update no action);

create index fk_preco_produto1_idx on nutrimix.preco (cd_produto asc);


-- -----------------------------------------------------
-- table nutrimix.venda_compra_produto
-- -----------------------------------------------------
create table if not exists nutrimix.venda_compra_produto (
  cd_movto int not null,
  cd_produto int not null,
  qt_unitario real not null,
  vl_unitario real not null,
  primary key (cd_movto, cd_produto),
  constraint fk_venda_compra_item_produto1
    foreign key (cd_produto)
    references nutrimix.produto (cd_produto)
    on delete no action
    on update no action,
  constraint fk_venda_compra_item_venda_compra1
    foreign key (cd_movto)
    references nutrimix.venda_compra (cd_movto)
    on delete no action
    on update no action);

create index fk_venda_compra_item_produto1_idx on nutrimix.venda_compra_produto (cd_produto asc);

create index fk_venda_compra_item_venda_compra1_idx on nutrimix.venda_compra_produto (cd_movto asc);


-- -----------------------------------------------------
-- table nutrimix.forma_pagto
-- -----------------------------------------------------
create table if not exists nutrimix.forma_pagto (
  cd_forma serial not null,
  ds_forma varchar(45) not null,
  in_ativo char(1) not null,
  primary key (cd_forma));


-- -----------------------------------------------------
-- table nutrimix.ajuste_caixa
-- -----------------------------------------------------
create table if not exists nutrimix.ajuste_caixa (
  cd_ajuste serial not null,
  cd_forpagto int not null,
  tp_ajuste char(1) not null,
  vl_ajuste real not null,
  ds_obs varchar(150) not null,
  cd_usercad int not null,
  dt_cadastro timestamp not null,
  primary key (cd_ajuste),
  constraint fk_ajuste_caixa_forma_pagto1
    foreign key (cd_forpagto)
    references nutrimix.forma_pagto (cd_forma)
    on delete no action
    on update no action);

create index fk_ajuste_caixa_forma_pagto1_idx on nutrimix.ajuste_caixa (cd_forpagto asc);


-- -----------------------------------------------------
-- table nutrimix.fechamento_caixa
-- -----------------------------------------------------
create table if not exists nutrimix.fechamento_caixa (
  cd_fechamento serial not null,
  dt_abertura timestamp not null,
  dt_fechamento timestamp null,
  vl_inicial real not null,
  vl_final real null,
  cd_useraber int not null,
  cd_userfech int null,
  primary key (cd_fechamento));


-- -----------------------------------------------------
-- table nutrimix.condicao
-- -----------------------------------------------------
create table if not exists nutrimix.condicao (
  cd_condicao serial not null,
  ds_condicao varchar(45) not null,
  qt_parcelas int not null,
  in_entrada char(1) not null,
  nr_intervalo int not null,
  in_ativo char(1) not null,
  primary key (cd_condicao));


-- -----------------------------------------------------
-- table nutrimix.tipo_despesa
-- -----------------------------------------------------
create table if not exists nutrimix.tipo_despesa (
  cd_tpdespesa serial not null,
  ds_tpdespesa varchar(45) not null,
  in_ativo char(1) not null,
  primary key (cd_tpdespesa));


-- -----------------------------------------------------
-- table nutrimix.despesa
-- -----------------------------------------------------
create table if not exists nutrimix.despesa (
  cd_despesa serial not null,
  cd_tpdespesa int not null,
  dt_despesa date not null,
  vl_despesa real not null,
  ds_obs varchar(150) null,
  cd_usercad int not null,
  dt_cadastro timestamp not null,
  primary key (cd_despesa),
  constraint fk_despesa_tipo_despesa1
    foreign key (cd_tpdespesa)
    references nutrimix.tipo_despesa (cd_tpdespesa)
    on delete no action
    on update no action);

create index fk_despesa_tipo_despesa1_idx on nutrimix.despesa (cd_tpdespesa asc);


-- -----------------------------------------------------
-- table nutrimix.contas_pagar_receber
-- -----------------------------------------------------
create table if not exists nutrimix.contas_pagar_receber (
  cd_conta serial not null,
  dt_movto timestamp not null,
  tp_movto char(1) not null,
  cd_condicao int not null,
  cd_forma int not null,
  cd_movto int null,
  cd_despesa int null,
  vl_conta real not null,
  st_conta char(1) not null,
  primary key (cd_conta),
  constraint fk_contas_pagar_receber_condicao1
    foreign key (cd_condicao)
    references nutrimix.condicao (cd_condicao)
    on delete no action
    on update no action,
  constraint fk_contas_pagar_receber_venda_compra1
    foreign key (cd_movto)
    references nutrimix.venda_compra (cd_movto)
    on delete no action
    on update no action,
  constraint fk_contas_pagar_receber_forma_pagto1
    foreign key (cd_forma)
    references nutrimix.forma_pagto (cd_forma)
    on delete no action
    on update no action,
  constraint fk_contas_pagar_receber_despesa1
    foreign key (cd_despesa)
    references nutrimix.despesa (cd_despesa)
    on delete no action
    on update no action);

create index fk_contas_pagar_receber_condicao1_idx on nutrimix.contas_pagar_receber (cd_condicao asc);

create index fk_contas_pagar_receber_venda_compra1_idx on nutrimix.contas_pagar_receber (cd_movto asc);

create index fk_contas_pagar_receber_forma_pagto1_idx on nutrimix.contas_pagar_receber (cd_forma asc);

create index fk_contas_pagar_receber_despesa1_idx on nutrimix.contas_pagar_receber (cd_despesa asc);


-- -----------------------------------------------------
-- table nutrimix.parcela
-- -----------------------------------------------------
create table if not exists nutrimix.parcela (
  cd_conta int not null,
  cd_parcela int not null,
  tp_movto char(1) not null,
  dt_vencto date not null,
  vl_parcela real not null,
  dt_pagto date null,
  vl_pago varchar(45) null,
  vl_desconto real null,
  vl_multa real null,
  cd_forpagto int null,
  in_cancelada char(1) not null,
  cd_usermovto int not null,
  dt_ultmovto timestamp not null,
  cd_parestorno int null,
  primary key (cd_conta, cd_parcela),
  constraint fk_parcelas_contas_pagar_receber1
    foreign key (cd_conta)
    references nutrimix.contas_pagar_receber (cd_conta)
    on delete no action
    on update no action,
  constraint fk_parcela_forma_pagto1
    foreign key (cd_forpagto)
    references nutrimix.forma_pagto (cd_forma)
    on delete no action
    on update no action);

create index fk_parcelas_contas_pagar_receber1_idx on nutrimix.parcela (cd_conta asc);

create index fk_parcela_forma_pagto1_idx on nutrimix.parcela (cd_forpagto asc);


-- -----------------------------------------------------
-- table nutrimix.movto_caixa
-- -----------------------------------------------------
create table if not exists nutrimix.movto_caixa (
  cd_movto_caixa serial not null,
  tp_movto_caixa char(1) not null,
  dt_movto timestamp not null,
  cd_forpagto int not null,
  vl_movto real not null,
  cd_ajuste int null,
  cd_fechamento int not null,
  cd_conta int null,
  cd_parcela int null,
  primary key (cd_movto_caixa),
  constraint fk_movto_caixa_forma_pagto1
    foreign key (cd_forpagto)
    references nutrimix.forma_pagto (cd_forma)
    on delete no action
    on update no action,
  constraint fk_movto_caixa_ajuste_caixa1
    foreign key (cd_ajuste)
    references nutrimix.ajuste_caixa (cd_ajuste)
    on delete no action
    on update no action,
  constraint fk_movto_caixa_fechamento_caixa1
    foreign key (cd_fechamento)
    references nutrimix.fechamento_caixa (cd_fechamento)
    on delete no action
    on update no action,
  constraint fk_movto_caixa_parcela1
    foreign key (cd_conta , cd_parcela)
    references nutrimix.parcela (cd_conta , cd_parcela)
    on delete no action
    on update no action);

create index fk_movto_caixa_forma_pagto1_idx on nutrimix.movto_caixa (cd_forpagto asc);

create index fk_movto_caixa_ajuste_caixa1_idx on nutrimix.movto_caixa (cd_ajuste asc);

create index fk_movto_caixa_fechamento_caixa1_idx on nutrimix.movto_caixa (cd_fechamento asc);

create index fk_movto_caixa_parcela1_idx on nutrimix.movto_caixa (cd_conta asc, cd_parcela asc);


-- -----------------------------------------------------
-- table nutrimix.pedido_produto
-- -----------------------------------------------------
create table if not exists nutrimix.pedido_produto (
  cd_pedido int not null,
  cd_produto int not null,
  dt_preventrega date not null,
  qt_produto real not null,
  vl_unitario real not null,
  qt_entregue real not null,
  primary key (cd_pedido, cd_produto),
  constraint fk_pedido_item_pedido1
    foreign key (cd_pedido)
    references nutrimix.pedido (cd_pedido)
    on delete no action
    on update no action,
  constraint fk_pedido_item_produto1
    foreign key (cd_produto)
    references nutrimix.produto (cd_produto)
    on delete no action
    on update no action);

create index fk_pedido_item_pedido1_idx on nutrimix.pedido_produto (cd_pedido asc);

create index fk_pedido_item_produto1_idx on nutrimix.pedido_produto (cd_produto asc);


-- -----------------------------------------------------
-- table nutrimix.banco
-- -----------------------------------------------------
create table if not exists nutrimix.banco (
  cd_banco serial not null,
  ds_banco varchar(150) not null,
  primary key (cd_banco));


-- -----------------------------------------------------
-- table nutrimix.conta
-- -----------------------------------------------------
create table if not exists nutrimix.conta (
  cd_conta serial not null,
  cd_fornecedor int not null,
  cd_banco int not null,
  nr_agencia varchar(20) not null,
  nr_conta varchar(20) not null,
  primary key (cd_conta, cd_fornecedor),
  constraint fk_conta_banco1
    foreign key (cd_banco)
    references nutrimix.banco (cd_banco)
    on delete no action
    on update no action,
  constraint fk_conta_fornecedor1
    foreign key (cd_fornecedor)
    references nutrimix.fornecedor (cd_fornecedor)
    on delete no action
    on update no action);

create index fk_conta_banco1_idx on nutrimix.conta (cd_banco asc);

create index fk_conta_fornecedor1_idx on nutrimix.conta (cd_fornecedor asc);


-- -----------------------------------------------------
-- table nutrimix.atendimento_produto
-- -----------------------------------------------------
create table if not exists nutrimix.atendimento_produto (
  cd_atend int not null,
  dt_atend date not null,
  cd_produto int not null,
  qt_produto real not null,
  qt_paga real not null,
  cd_usercad int not null,
  dt_cadastro timestamp not null,
  primary key (cd_produto, dt_atend, cd_atend),
  constraint fk_produto_has_atendimento_produto1
    foreign key (cd_produto)
    references nutrimix.produto (cd_produto)
    on delete no action
    on update no action,
  constraint fk_produto_atendimento_atendimento1
    foreign key (cd_atend , dt_atend)
    references nutrimix.atendimento (cd_atend , dt_atend)
    on delete no action
    on update no action);

create index fk_produto_has_atendimento_produto1_idx on nutrimix.atendimento_produto (cd_produto asc);

create index fk_produto_atendimento_atendimento1_idx on nutrimix.atendimento_produto (cd_atend asc, dt_atend asc);


-- -----------------------------------------------------
-- table nutrimix.perfil_tela
-- -----------------------------------------------------
create table if not exists nutrimix.perfil_tela (
  cd_perfil int not null,
  cd_tela varchar(25) not null,
  primary key (cd_perfil, cd_tela),
  constraint fk_perfil_tela_perfil1
    foreign key (cd_perfil)
    references nutrimix.perfil (cd_perfil)
    on delete no action
    on update no action);

create index fk_perfil_tela_perfil1_idx on nutrimix.perfil_tela (cd_perfil asc);



